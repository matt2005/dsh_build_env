{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "AASDK - Get",
            "command": "git clone git@github.com:matt2005/aasdk.git -b cpack",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "AASDK - Clean",
            "command": "cd aasdk;sudo rm -R build",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "AASDK - Build",
            "command": "cd aasdk;mkdir build;cd build;cmake -DCMAKE_BUILD_TYPE=Release ../",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "AASDK - Make",
            "command": "cd aasdk;cd build;make -j2",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "AASDK - Create DEB Package",
            "command": "cd aasdk;cd build;cpack --config CPackConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "AASDK - Create DEB SRC Package",
            "command": "cd aasdk;cd build;cpack --config CPackSourceConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Get",
            "command": "git clone git://github.com/GStreamer/qt-gstreamer",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Patch",
            "command": "cd qt-gstreamer;patch CMakeLists.txt < ../qt-gstreamer_cpack.patch",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Clean",
            "command": "cd qt-gstreamer;sudo rm -R build",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Build",
            "command": "cd qt-gstreamer;mkdir build;cd build;cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib/$(dpkg-architecture -qDEB_HOST_MULTIARCH) -DCMAKE_INSTALL_INCLUDEDIR=include -DQT_VERSION=5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-std=c++11",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Make",
            "command": "cd qt-gstreamer;cd build;make -j2",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Create DEB Package",
            "command": "cd qt-gstreamer;cd build;cpack --config CPackConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "qt-gstreamer - Create DEB SRC Package",
            "command": "cd qt-gstreamer;cd build;cpack --config CPackSourceConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Get",
            "command": "git clone git@github.com:matt2005/OpenAuto.git -b cpack openauto",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Clean",
            "command": "cd openauto;sudo rm -R build",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Build",
            "command": "cd openauto;mkdir build;cd build;cmake -DCMAKE_BUILD_TYPE=Release -DGST_BUILD=true ../",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Make",
            "command": "cd openauto;cd build;make -j2",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Create DEB Package",
            "command": "cd openauto;cd build;cpack --config CPackConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "OpenAuto - Create DEB SRC Package",
            "command": "cd openauto;cd build;cpack --config CPackSourceConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Get",
            "command": "git clone git@github.com:openDsh/dash.git opendsh",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Install Deps",
            "command": "cd opendsh;./install.sh --deps",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Patch",
            "command": "cd opendsh;patch CMakeLists.txt < ../dash_cpack.patch",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Clean",
            "command": "cd opendsh;sudo rm -R build",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Build",
            "command": "cd opendsh;mkdir build;cd build;cmake -DCMAKE_BUILD_TYPE=Release -DGST_BUILD=TRUE -DCMAKE_INSTALL_PREFIX=\"/usr/local/opendsh\" ../",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Make",
            "command": "cd opendsh;cd build;make -j2",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Create DEB Package",
            "command": "cd opendsh;cd build;cpack --config CPackConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Dash - Create DEB SRC Package",
            "command": "cd opendsh;cd build;cpack --config CPackSourceConfig.cmake",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "build"
        },
        {
            "label": "Packages - Get",
            "command": "git clone git@github.com:matt2005/packagerepo.git",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "none"
        },
        {
            "label": "Fury - Packages - prereq",
            "command": "sudo bash -c \"echo 'deb [trusted=yes] https://cli.gemfury.com/apt/ /' > /etc/apt/sources.list.d/fury-cli.list\"; sudo apt update; sudo apt install gemfury -y",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "none"
        },
        {
            "label": "Packages - Get",
            "command": "git clone git@github.com:matt2005/packagerepo.git",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "none"
        },
        {
            "label": "Packages - Deploy",
            "command": "pwsh -f ./deploy.ps1",
            "type": "shell",
            "args": [],
            "problemMatcher": [
                "$tsc"
            ],
            "presentation": {
                "reveal": "always"
            },
            "group": "none"
        }
    ]
}