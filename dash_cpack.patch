diff --git a/CMakeLists.txt b/CMakeLists.txt
index e466dd3..8168479 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,12 @@
 cmake_minimum_required(VERSION 3.7.0)
-project(dash CXX)
 
+set (dash_VERSION_MAJOR 0)
+set (dash_VERSION_MINOR 1)
+set (dash_VERSION_PATCH 0)
+project(dash
+VERSION ${dash_VERSION_MAJOR}.${dash_VERSION_MINOR}.${dash_VERSION_PATCH}
+LANGUAGES CXX)
+ 
 set(CMAKE_AUTOMOC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_AUTORCC ON)
@@ -85,6 +91,9 @@ add_subdirectory(plugins)
 add_executable(dash ${source_files})
 
 include(${base_directory}/cmake_modules/gitversion.cmake)
+set (dash_VERSION_PATCH ${_commit_timestamp})
+set (dash_VERSION_STRING ${dash_VERSION_MAJOR}.${dash_VERSION_MINOR}.${dash_VERSION_PATCH})
+message(INFO " Project Version: ${dash_VERSION_STRING}")
 
 target_include_directories(dash PRIVATE
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -147,4 +156,38 @@ target_link_libraries(dash
     ${TAGLIB_LIBRARIES}
     )
 
-install(TARGETS dash DESTINATION bin)
+install(DIRECTORY lib DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT libraries)
+install(DIRECTORY include DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT headers)
+install(DIRECTORY bin DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT applications)
+
+SET(CPACK_GENERATOR "DEB")
+SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "OpenDsh") #required
+SET(CPACK_DEBIAN_PACKAGE_NAME "opendsh")
+SET(CPACK_PACKAGE_VENDOR "OpenDsh") 
+set(CPACK_PACKAGE_VERSION ${dash_VERSION_STRING})
+set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
+set(CPACK_DEBIAN_PACKAGE_DEPENDS "openautoopendsh (>=2.1.1629500851)")
+set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
+set(CPACK_COMPONENTS_ALL applications libraries headers Unspecified)
+set(CPACK_COMPONENT_APPLICATIONS_DISPLAY_NAME "Applications")
+set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Libraries")
+set(CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Headers")
+set(CPACK_COMPONENT_APPLICATIONS_DESCRIPTION
+  "Applications provided by OpenDsh")
+set(CPACK_COMPONENT_LIBRARIES_DESCRIPTION
+  "Static libraries used to build programs with OpenDsh")
+set(CPACK_COMPONENT_HEADERS_DESCRIPTION
+  "C/C++ header files for use with OpenDsh")
+set(CPACK_COMPONENT_LIBRARIES_GROUP "Development")
+set(CPACK_COMPONENT_HEADERS_GROUP "Development")
+set(CPACK_COMPONENT_GROUP_DEVELOPMENT_EXPANDED ON)
+set(CPACK_COMPONENT_GROUP_DEVELOPMENT_DESCRIPTION
+  "All of the tools you'll ever need to develop software")
+set(CPACK_COMPONENT_HEADERS_DEPENDS libraries)
+set(CPACK_COMPONENT_APPLICATIONS_DEPENDS libraries)
+set(CPACK_ALL_INSTALL_TYPES Full Developer)
+set(CPACK_INSTALL_TYPE_FULL_DISPLAY_NAME "Everything")
+set(CPACK_COMPONENT_LIBRARIES_INSTALL_TYPES Developer Full)
+set(CPACK_COMPONENT_HEADERS_INSTALL_TYPES Developer Full)
+set(CPACK_COMPONENT_APPLICATIONS_INSTALL_TYPES Full)
+INCLUDE(CPack)
diff --git a/cmake_modules/gitversion.cmake b/cmake_modules/gitversion.cmake
index dd473c0..9a5b33a 100644
--- a/cmake_modules/gitversion.cmake
+++ b/cmake_modules/gitversion.cmake
@@ -21,6 +21,13 @@ if(GIT_FOUND)
     ERROR_QUIET
     OUTPUT_STRIP_TRAILING_WHITESPACE
   )
+  execute_process(
+    COMMAND ${GIT_EXECUTABLE} log -1 --format=%at
+    WORKING_DIRECTORY "${local_dir}"
+    OUTPUT_VARIABLE _commit_timestamp
+    ERROR_QUIET
+    OUTPUT_STRIP_TRAILING_WHITESPACE
+  )
   message( STATUS "GIT hash: ${_build_version}; branch: ${_build_branch}")
   execute_process(
   	COMMAND ${GIT_EXECUTABLE} diff --no-ext-diff --quiet
